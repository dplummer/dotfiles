" Needed on some linux distros.
" see http://tammersaleh.com/posts/the-modern-vim-config-with-pathogen
filetype off
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

" Solarized colorscheme
let g:solarized_termcolors=256
colorscheme darkspectrum
set background=dark
set wrap
set colorcolumn=81
hi ColorColumn ctermbg=red guibg=#343434

set equalalways
autocmd QuickFixCmdPost *grep* copen
autocmd QuickFixCmdPost *log* copen

autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

autocmd FileType ruby,perl,tex set shiftwidth=2

augroup filetypedetect
  au! BufNewFile,BufRead *.ch setf cheat
  au BufNewFile,BufRead *.liquid setf liquid
  au! BufRead,BufNewFile *.haml setfiletype haml
  autocmd BufNewFile,BufRead *.yml setf eruby
augroup ENDu"


" Gundo
" http://sjl.bitbucket.org/gundo.vim/
nnoremap <F5> :GundoToggle<CR>

syntax on
filetype plugin indent on
set tabstop=2
set smarttab
set shiftwidth=2
set autoindent
set expandtab

" list and invisible characters
set list
set listchars=tab:▸\ ,eol:¬

map <Leader>h :noh<CR>

" makes ,w split windows vertically
nnoremap <leader>w <C-w>v<C-w>l

" split window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" FuzzyFinder setup
map <leader>t :FuzzyFinderTextMate<CR>
map <leader>b :FuzzyFinderBuffer<CR>
map <leader>] :FuzzyFinderMruFile<CR>
map <leader>r :ruby finder.rescan!<CR>
let g:proj_flags="imstg"
let g:fuzzy_roots="app\nlib\nconfig\npublic/javascripts\npublic/stylesheets\nfeatures\nspec\nsrc\ntest"
let g:fuzzy_ceiling=40000
let g:fuzzy_matching_limit=10
let g:fuzzy_ignore="gems/**, log/**, public/**, vendor/**, public/images/**, public/themes/**, tmp/**, *.gem, *.log, *.db, *.sqlite*, doc/**, rdoc/**, *.png, *.jp*g, *.PNG, *.JP*G, *.GIF"

" vertical/horizontal scroll off settings for readability
set scrolloff=3
set sidescrolloff=7
set sidescroll=1

map K <Nop>

" Fancy statusline
set statusline=%<%f\ \%h%m%r%=%-40(,%n%Y%)\%P
" set statusline=%<%f\ (line=%l,col=%c%V,totlin=%L%)\%h%m%r%=%-40(,%n%Y%)\%P
" Syntastic stuff for status line
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_enable_signs = 1

map <C-f> <S-Down>
map <C-F> <S-Down>

autocmd BufRead *_spec.rb syn keyword rubyRspec describe context it specify it_should_behave_like before after setup subject its shared_examples_for shared_context let
highlight def link rubyRspec Function
