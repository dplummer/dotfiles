" Needed on some linux distros.
" see http://tammersaleh.com/posts/the-modern-vim-config-with-pathogen
filetype off
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

" Solarized colorscheme
let g:solarized_termcolors=256
colorscheme darkspectrum
set background=dark
set wrap
set colorcolumn=81
hi ColorColumn ctermbg=red guibg=#343434

set equalalways
autocmd QuickFixCmdPost *grep* copen
autocmd QuickFixCmdPost *log* copen

autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

autocmd FileType ruby,perl,tex set shiftwidth=2

augroup filetypedetect
  au! BufNewFile,BufRead *.ch setf cheat
  au BufNewFile,BufRead *.liquid setf liquid
  au! BufRead,BufNewFile *.haml setfiletype haml
  autocmd BufNewFile,BufRead *.yml setf eruby
augroup ENDu"


" Gundo
" http://sjl.bitbucket.org/gundo.vim/
nnoremap <F5> :GundoToggle<CR>

syntax on
filetype plugin indent on
set tabstop=2
set smarttab
set shiftwidth=2
set autoindent
set expandtab

" list and invisible characters
set list
set listchars=tab:▸\ ,eol:¬

map <Leader>h :noh<CR>

" previous file
map <leader><leader> <C-^>

" makes ,w split windows vertically
nnoremap <leader>w <C-w>v<C-w>l

" split window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"Reload command t buffer
map <leader>r :CommandTFlush<CR>

set wildignore+=*.log,*.sql,*.gz,*.jp*g,*.png,*.gif

" vertical/horizontal scroll off settings for readability
set scrolloff=3
set sidescrolloff=7
set sidescroll=1

map K <Nop>

" Fancy statusline
set statusline=%<%f\ \%h%m%r%=%-40(,%n%Y%)\%P
" set statusline=%<%f\ (line=%l,col=%c%V,totlin=%L%)\%h%m%r%=%-40(,%n%Y%)\%P
" Syntastic stuff for status line
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_enable_signs = 1

map <C-f> <S-Down>
map <C-F> <S-Down>

autocmd BufRead *_spec.rb syn keyword rubyRspec describe context it specify it_should_behave_like before after setup subject its shared_examples_for shared_context let
highlight def link rubyRspec Function

" added by Michael
" fugitive
nmap <leader>ga :Gwrite<cr>
nmap <leader>gs :Gstatus<cr>
nmap <leader>gc :Gcommit<cr>
nmap <leader>gl :Glog 
nmap <leader>gd :Gdiff<cr>
nmap <leader>gb :Gblame<cr>
nmap <leader>gr :Gremove
nmap <leader>gw :Gbrowse<cr>
nmap <leader>du :diffupdate<cr>
nmap <leader>co :copen<cr>
nmap <leader>gg :Ggrep
nmap <F1> <nop>
" Better have terminal pause disabled
:map <silent> <c-s> :if expand("%") == ""<CR>:browse confirm w<CR>:else<CR>:confirm w<CR>:endif<CR>
" Works in insert mode, skips confirm dialog
:imap <c-s> <c-o><c-s>

"control-q to close a buffer/quit
:map <silent> <c-q> :confirm q<CR>

"Alias leader to , as well as \
:nmap , \
:nmap ,, <C-^>
